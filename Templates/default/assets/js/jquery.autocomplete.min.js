(function ($, document, window, undefined ) {

	var 	pluginName 		= 	'pgrwAutocomplete',
			defaults 		= 	{
				type:"default",
				minLength:1,
			},
			publicMethod;

	publicMethod 	=	$[pluginName]	=	function (options) {
		var $obj 	= 	this;
		if($.isFunction($obj)){
			publicMethod.init();
		}
    }

	publicMethod.init 	= 	function () {
		$autocomplete	=	$(".pgrw_autocomplete");
		if($autocomplete.length>0){
			$autocomplete.each(function(index,v){
				var content = publicMethod.make_content($(v));
				$(this).keyup(function(e){
					/*if(content.parent().find(".bk") && $("#oi").val()=='' && $(this).attr("id")!='oi'){
						content.html(content.parent().find(".bk"));
					}*/
					if($(this).val()==''){
						$("#"+$(this).data("data")).val("");
					}
					var pattern = "/" + $(this).val() + "/i";
					if($(this).val().length>=defaults.minLength){
						var searchField = $(this).val();
						if(searchField === ''){
							content.hide();
							return;
						}else{
							publicMethod.toggle(content,$(this));
						}
					}else{
						content.hide();
					}
				});
				$(this).focusout(function(){
					setTimeout(function(){ content.hide(); }, 200);
				});
				$(this).focusin(function(){
					if($(this).val().length>=defaults.minLength){
						publicMethod.toggle(content,$(this));
					}
				});
			});
		}
	}

	publicMethod.toggle 	= 	function (content,searchField) {
		content.show();
		content.find('.item').hide().removeClass("active");
		if(content.find("div:contains('"+searchField.val().toUpperCase()+"')").length<1){
			content.hide();
		}
		content.find("div:contains('"+searchField.val().toUpperCase()+"')").show().addClass("active");
		$("#"+searchField.data("data")).val(content.find("div:contains('"+searchField.val().toUpperCase()+"')").first().data("value"));
	}

	publicMethod.desplazamiento 	= 	function (obj) {

	}

	publicMethod.select 	= 	function (item_list,input) {
		input.val(item_list.data("label"));
		$("#"+input.data("data")).val(item_list.data("value"));
	}

	publicMethod.dependientes =	function (item_list,input) {
		if(input.attr("id")=='oi'){
			inc 		=	0;
			item_id 	=	item_list.data("value");
			data 		=	eval(input.data("data"));
			array_data	=	eval(data[1][item_id]);
			content=[];
			bk_items=[];

			spans =	["autocomplete_disciplinas","autocomplete_ciudades"];
			$.each(spans,function(k,v){

				content[inc]	= 	$("."+v);
				html_dentro	=	content[inc].html();
				bk   		=	$('<div class="bk" style="display:none;"></div>');
				bk.html(html_dentro);
				content[inc].html("").parent().prepend(bk);
				coontent_bk 	=	content[inc].parent().find(".bk");
				$.each(array_data,function(k2,v2){
					if(coontent_bk.find('div[data-value="'+v2+'"]').length>0){
						new_item 	= coontent_bk.find('div[data-value="'+v2+'"]');
						new_item.click(function(){
							if(v=='autocomplete_disciplinas'){
								input2 = $("#what");
							}else if(v=='autocomplete_ciudades'){
								input2 = $("#where");
							}
							publicMethod.select($(this),input2);
						});
						content[inc].append(new_item);
					}
				});
				inc++;
			});
		}
	}

	publicMethod.make_content 	= 	function (input) {
		input.attr("autocomplete","off");
		list 	=	eval(input.data("data"));
		div		=	$('<div class="items autocomplete_'+input.data("data")+' "></div>');
		parent 	=	input.parent();
		parent.css("position","relative").addClass("autocomplete");
		div.addClass("absolute").width(parent.width()).css("top",(input.height()+14)+"px");
		parent.append(div);
		$.each(list[0],function(k,v){
			if(v.label){
				new_item 	=	$('<div class="item" data-label="'+v.label+'" data-value="'+v.value+'">'+v.label+'<span>'+v.label.toUpperCase()+'</span></div>');
				new_item.click(function(){
					publicMethod.select($(this),input);
					publicMethod.dependientes($(this),input);
				});
				div.append(new_item);
			}
		});
		return div;
	}

	$(document).ready(function(){
		$.pgrwAutocomplete();
	});

}(jQuery, document, window));
